
<!DOCTYPE html>
<html>

<head>
 <style type="text/css">
   body{
      background-color:rgb(50,50,50);
      color:white
   }
   a{
      color:rgb(210,210,255)
   }
   img{
      margin: 15px 15px 15px 15px
   }
   hr{
      border-top: 1px solid gray;
   }
   .infotd{
     vertical-align:top
   }
 </style>
</head>

<body style="background-color:rgb(50,50,50); color:white">
<table width= 1000px>
  <tr>
    <td class="infotd">
      <h3>Sam Cosford</h3>
      <p> I'm not gonna tell you my name,so.... I've built my own desktop from scratch and do a fair bit of 
	  PC gaming, although I only seem to be playing R6S at the moment. I completed both GCSE's and ALevels at St John's school and sixth form in Epping, Essex. 
	  My ALevels are in Government & Politics, Physics and Computer Science.(My ALevel CS teacher didnt know how to code very much so most of my coding 
	  is built off strange people on youtube using a potato as a mic.) I live in Waltham Abbey, on the border of Essex and Hertfordshire so i have a lovely
	  hour and a half commute to uni everyday...</p> 
    </td>
    <td>
	<img src="Images/imageofme.jpg" width=300px></img>
    </td>
  </tr>
  <tr>
    <td colspan=2>
	<hr>
    </td>
  </tr>

 <tr>
  <td class="infotd">
    <h3>Bootcamp 2020: Cookie Clicker</h3>
    <p>
	My project for the boot camp was based on a game called "Cookie Clicker". The original game can be found on platforms such as Steam and can also be played in web
	browsers. My version of the game first started out as just a circle that when clicked, incremented a counter by 1. The Cookie and CPS (Cookies Per Second) counters
	were then added to the top left of the screen so the user can visually see their progress. The buttons on the gith of the screen with their mouse over colour change
	were then added for better user interaction, with these buttons then came the implementaton of the ability to purchase new gear. This gear will automatically generate
	cookies so the user can automate production. Counters were added so that the user can see how many of each gear part they currently have. After this, smaller pictures
	of the gear were added to help the user better visually track how much gear they have, this also made the game seem more polished and more visually appealing.
	Price multipliers were then implemented so the cost of new gear better scales to the amount of cookies the user has. Finally effects such as the bouncing cookies on
	the right of the screen and the spinning background were added to make the game more detailed and interesting to the eye. Subroutines were used alot throughout this
	project as they make the code look neater and easier to read. Other skills such as image loading, rotating, translating and alot of variables were used.
    </p>

    <p>
      The code: <a href="https://github.com/SamCosford/Boot-camp-project.git">https://github.com/SamCosford/Boot-camp-project.git</a>
    </p>
  <td>
	<video width="429" height="200" controls>
	<source src="Videos/CookieClicker.mp4" type="video/mp4">
	</video>
  <td>
  </td>
<tr>
 <td colspan = 2 align=center>
	<img src="Images/pic1.jpg" width="285px">
	<img src="Images/pic2.jpg" width="265px">
	<img src="Images/pic3.jpg" width="255px">
 </td>
</tr>
</tr>

<td colspan=2>
	<hr>
    </td>

 <tr>
  <td class="infotd">
    <h3>2022 Java, The Hollow King</h3>
    <p>
	My project for the boot camp was based on a game called "Cookie Clicker". The original game can be found on platforms such as Steam and can also be played in web
	browsers. My version of the game first started out as just a circle that when clicked, incremented a counter by 1. The Cookie and CPS (Cookies Per Second) counters
	were then added to the top left of the screen so the user can visually see their progress. The buttons on the gith of the screen with their mouse over colour change
	were then added for better user interaction, with these buttons then came the implementaton of the ability to purchase new gear. This gear will automatically generate
	cookies so the user can automate production. Counters were added so that the user can see how many of each gear part they currently have. After this, smaller pictures
	of the gear were added to help the user better visually track how much gear they have, this also made the game seem more polished and more visually appealing.
	Price multipliers were then implemented so the cost of new gear better scales to the amount of cookies the user has. Finally effects such as the bouncing cookies on
	the right of the screen and the spinning background were added to make the game more detailed and interesting to the eye. Subroutines were used alot throughout this
	project as they make the code look neater and easier to read. Other skills such as image loading, rotating, translating and alot of variables were used.
    </p>

    <p>
      The code: <a href="https://github.com/cityteaching/citygame2122-SamCosford.git">https://github.com/cityteaching/citygame2122-SamCosford.git</a>
    </p>
  <td>
	<video width="429" height="200" controls>
	<source src="Videos/HollowKing.mp4" type="video/mp4">
	</video>
  <td>
  </td>
<tr>
 <td colspan = 2 align=center>
	<img src="Images/HollowKing1.png" width="255px">
	<img src="Images/HollowKing2.png" width="255px">
	<img src="Images/HollowKing3.png" width="255px">
 </td>
</tr>
</tr>

</table>
</body>
</html>